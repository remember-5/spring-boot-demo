<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.remember5</groupId>
        <artifactId>spring-boot-demo</artifactId>
        <version>1.0.0</version>
    </parent>

    <artifactId>demo-db2doc</artifactId>
    <version>0.0.1</version>
    <name>demo-db2doc</name>
    <description>demo-db2doc</description>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <mysql-connector-java.version>8.0.22</mysql-connector-java.version>
        <mariadb-java-client.version>2.7.1</mariadb-java-client.version>
        <postgresql.version>42.3.8</postgresql.version>
        <ojdbc.version>19.3.0.0</ojdbc.version>
        <orai18n.version>12.1.0.2.0</orai18n.version>
        <mssql.version>8.2.1.jre8</mssql.version>
        <postgresql.version>42.2.11</postgresql.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>cn.smallbun.screw</groupId>
            <artifactId>screw-core</artifactId>
            <version>1.0.5</version>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>4.0.3</version>
        </dependency>
        <!-- mysql-connector-java -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.jgoodies/forms -->
        <dependency>
            <groupId>com.jgoodies</groupId>
            <artifactId>forms</artifactId>
            <version>1.2.1</version>
        </dependency>
        <dependency>
            <groupId>com.intellij</groupId>
            <artifactId>forms_rt</artifactId>
            <version>7.0.3</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- mariadb-java-client -->
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>${mariadb-java-client.version}</version>
        </dependency>
        <!-- ojdbc8 -->
        <dependency>
            <groupId>com.oracle.ojdbc</groupId>
            <artifactId>ojdbc8</artifactId>
            <version>${ojdbc.version}</version>
        </dependency>
        <dependency>
            <groupId>cn.easyproject</groupId>
            <artifactId>orai18n</artifactId>
            <version>${orai18n.version}</version>
        </dependency>
        <!-- postgresql -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>
        <!--sqlserver-->
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
            <version>${mssql.version}</version>
        </dependency>
    </dependencies>


    <build>
        <finalName>db2doc</finalName>
        <plugins>
            <!--      maven-jar-plugin 是 Maven 的默认插件，用于创建普通的 JAR 文件。它主要用于将项目的编译输出打包为一个 JAR 文件，但不包含依赖项。      -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <archive>
                        <!-- 生成的jar中，不要包含pom.xml和pom.properties这两个文件-->
                        <addMavenDescriptor>false</addMavenDescriptor>
                        <manifest>
                            <!--这个属性特别关键，如果没有这个属性，有时候我们引用的包maven库
                          下面可能会有多个包，并且只有一个是正确的，其余的可能是带时间戳的，
                          此时会在classpath下面把那个带时间戳的给添加上去，然后我们
                          在依赖打包的时候，打的是正确的，所以两头会对不上，报错。-->
                            <useUniqueVersions>false</useUniqueVersions>
                            <!--是否要把第三方jar放到manifest的classpath中-->
                            <addClasspath>true</addClasspath>
                            <!--  生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/-->
                            <classpathPrefix>lib/</classpathPrefix>
                            <!--                应用的main class-->
                            <mainClass>com.remember5.db2doc.MainClass</mainClass>
                        </manifest>
                    </archive>
                    <!--            过滤掉不希望包含在jar中的文件-->
                    <excludes>
                        <exclude>${project.basedir}/xml/*</exclude>
                        <exclude>${project.basedir}/docs</exclude>
                    </excludes>
                    <!-- jar包的位置-->
<!--                    <outputDirectory>${project.build.directory}/</outputDirectory>-->
<!--                    <includes>-->
<!--                        &lt;!&ndash; 打jar包时，只打包class文件 &ndash;&gt;-->
<!--                        &lt;!&ndash; 有时候可能需要一些其他文件，这边可以配置，包括剔除的文件等等&ndash;&gt;-->
<!--                        <include>**/*.class</include>-->
<!--                    </includes>-->
                </configuration>
            </plugin>
        </plugins>

    </build>
</project>
